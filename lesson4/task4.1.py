# 1. Проанализировать скорость и сложность одного любого алгоритма,
#    разработанных в рамках домашнего задания первых трех уроков.
# Примечание: попробуйте написать несколько реализаций алгоритма и сравнить их.

#  Принцип работы и назначение cProfile поняла, с синтаксисом timeit ещё не совсем разобралась.
#  Разбираюсь и изучаю эту тему.

# Задача:  Посчитать четные и нечетные цифры введенного натурального числа.

import cProfile
import timeit

#a = int(input('Введите число: '))
def with_while(a):
    even = odd = 0
    while a > 0:
        if a % 2 == 0:
            even += 1
        else:
            odd += 1
        a = a // 10
    print('В данном числе четных - %d , нечетных - %d' % (even, odd))

with_while(7436574365736478537568473687657342625767865989898989898989898899898989898989898989898998989898989)

cProfile.run('with_while')
print(timeit.timeit('with_while'))

def with_for(a):
    even = 0
    odd = 0

    for number in a:
        if int(number) % 2 == 0:
            even += 1
        else:
            odd += 1
    print('В данном числе четных - %d , нечетных - %d' % (even, odd))

with_for('7436574365736478537568473687657342625767865')

cProfile.run('with_for')
